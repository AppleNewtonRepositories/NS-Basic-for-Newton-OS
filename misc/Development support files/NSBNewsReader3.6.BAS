0010  REM NSBNewsReader By John Schettino R3.60020  LET NewsHost := "nntp.netcruiser" // change this for your host!0030  LET NewsPort := 1190040  LET username := "gh@nsbasic.com (George Henne)" // change this to your name!0050  LET appSpec={goto: 'endProgram, title: "NSB NetNews 3.5"}0060  WINDOW app, appSpec,"APP"0070  SHOW app0080  WIDGETDEF Layout_0:=[{widgetType:"textList", widgetName:"Articles", viewBounds:{top:67, bottom:261, left:1, right:239}, ListItems:[], useScrollers:TRUE, useMultipleSelections:NIL, ScrollAmounts:[1, 3, 20], viewFont:{family:'espy, face:0, size:9}}, {widgetType:"textButton", widgetName:"connect", GOSUB:'Connect, viewBounds:{left:176, top:281, right:235, bottom:296}, viewFlags:514, text:"Connect", viewFont:{family:'espy, face:1, size:9}, viewFormat:67109456}, {widgetType:"textButton", widgetName:"group", GOSUB:'opengroup, viewBounds:{top:47, bottom:62, left:155, right:230}, viewFlags:514, text:"Get subjects", viewFont:{family:'espy, face:1, size:9}, viewFormat:67109456}, {widgetType:"labelInput", widgetName:"newsgroup", currLabelCommand:0, entryFlags:55811, labelFont:{family:'espy, face:1, size:9}, indent:73, labelCommands:["gtel.test", "comp.sys.newton.misc", "comp.sys.newton.programmer"], viewBounds:{left:2, top:21, right:238, bottom:43}, label:"News Group", text:""}, {widgetType:"labelPicker", widgetName:"Widget_4", checkCurrentItem:TRUE, indent:60, viewBounds:{left:3, top:45, right:143, bottom:65}, labelCommands:["5", "10", "15", "20"], text:"Get next", viewValue:0}, {widgetType:"textButton", widgetName:"Widget_5", GOSUB:'openPost, viewBounds:{top:281, bottom:296, left:81, right:141}, viewFlags:514, text:"Post article", viewFont:{family:'espy, face:1, size:9}, viewFormat:67109456}, {widgetType:"textButton", widgetName:"Widget_6", GOSUB:'readArticle, viewBounds:{top:281, bottom:296, left:4, right:68}, viewFlags:514, text:"Read article", viewFont:{family:'espy, face:1, size:9}, viewFormat:67109456}]  0090  WIDGETDEF Layout_1:=[{widgetType:"text", widgetName:"Widget_0", viewClass:81, viewBounds:{top:20, bottom:80, left:1, right:238}, viewFlags:47618, viewFormat:257, viewJustify:0, viewLineSpacing:12, text:"", viewFont:{family:'espy, face:1, size:9}, tabs:[20, 40, 60, 80, 120, 140, 160, 180]}, {widgetType:"Scroller", widgetName:"Widget_1", text:"", boxtitle:"Article", editOK:NIL, viewBounds:{top:82, bottom:278, left:1, right:239}}, {widgetType:"textButton", widgetName:"Widget_2", GOSUB:'finishedReading, viewBounds:{left:177, top:282, right:236, bottom:297}, viewFlags:514, text:"Subjects", viewFont:{family:'espy, face:1, size:9}, viewFormat:67109456}] 0100  WIDGETDEF Layout_2:=[{widgetType:"labelInput", widgetName:"Widget_0", currLabelCommand:0, entryFlags:33553921, labelFont:{family:'espy, face:1, size:9}, indent:50, labelCommands:NIL, viewBounds:{top:24, bottom:44, left:1, right:239}, label:"Subject", text:""}, {widgetType:"Scroller", widgetName:"Widget_1", text:"", boxtitle:"Article", editOK:TRUE, viewBounds:{top:51, bottom:275, left:2, right:238}}, {widgetType:"textButton", widgetName:"Widget_2", GOSUB:'sendPost, viewBounds:{top:283, bottom:298, left:4, right:43}, viewFlags:514, text:"Post", viewFont:{family:'espy, face:1, size:9}, viewFormat:67109456}, {widgetType:"textButton", widgetName:"Widget_3", GOSUB:'discardPost, viewBounds:{top:283, bottom:298, left:186, right:235}, viewFlags:514, text:"Cancel", viewFont:{family:'espy, face:1, size:9}, viewFormat:67109456}] 0110  WINDOW wlist,Layout_00120  WINDOW w2list, Layout_10130  WINDOW w3list, Layout_20140  SHOW wlist0145  HIDE wlist[2], wlist[5], wlist[6]0150  DO0160    WAIT 50000165    LET nntpReply = NIL0170  LOOP1000 connect: REM1010  IF layout_0[1].text = "Connect" THEN1020    GOSUB openConnection //1030    SETVALUE(layout_0[1], 'text, "Disconnect")1035    SHOW wlist[2], wlist[5], wlist[6]1040    RETURN1050  ELSE1060    GOSUB NNTPDisconnect //1070    SETVALUE(layout_0[1], 'text, "Connect")1080    SETVALUE(layout_0[0],'listitems, [])1090    U.layout_0[0]:SETUPLIST()1100    U.layout_0[0]:REDOCHILDREN()1105    HIDE wlist[2], wlist[5], wlist[6]1110  END IF1120  RETURN1200 openGroup: REM1210  LET newsgroup := layout_0[3].entryline.text1215  PROGRESS("Getting Subjects", "Group" && newsgroup, 10)1220  GOSUB selectGroup //1230  LET maxArticles = FLOOR(STRINGTONUMBER(layout_0[4].entryline.text))1240  LET startId = lastId - (maxArticles-1)1250  LET endId = lastId1255  PROGRESS("Getting Subjects", "Valid subjects" && firstId &&"-" && lastId, 20)1260  GOSUB getSubjects //1265  PROGRESS("Getting Subjects","Got subjects" && startId &&"-" && endId, 50)1270  SETVALUE(layout_0[0],'listitems, subjects)1280  U.layout_0[0]:SETUPLIST()1290  U.layout_0[0]:REDOCHILDREN()1295  PROGRESS("Getting Subjects", "", NIL)1300  RETURN1500 readArticle: REM1510  LET artId := ids[layout_0[0].selection]1515  PROGRESS("Getting Article", subjects[layout_0[0].selection], 10)1520  HIDE wlist1530  SHOW w2list1532  SETVALUE(layout_1[0], 'text, "")1534  SETVALUE(layout_1[1], 'text, "")1535  WAIT 11540  GOSUB fetch //1550  SETVALUE(layout_1[0], 'text, header)1560  SETVALUE(layout_1[1], 'text, body)1565  PROGRESS("Getting Article", "", NIL)1570  RETURN1600 openPost: REM1605  LET newsgroup := layout_0[3].entryline.text1610  HIDE wlist1620  SHOW w3list1630  SETVALUE(layout_2[0].entryline, 'text, "")1640  SETVALUE(layout_2[1], 'text, "")1650  RETURN1700 finishedReading: REM1710  HIDE w2list1720  SHOW wlist1730  RETURN1800 discardPost: REM1810  HIDE w3list1820  SHOW wlist1830  RETURN1900 sendPost: REM1905  PROGRESS("Posting Article", "Getting article text", 10)1910  LET subject := layout_2[0].entryline.text1920  LET body := layout_2[1].text1930  GOSUB post //1940  HIDE w3list1950  SHOW wlist1955  PROGRESS("Posting Article", "", NIL)1960  RETURN3900 endProgram: REM3910  IF U.bit THEN3920    IF bit.FENDPOINTSTATE=1 THEN GOSUB NNTPDisconnect3930  END IF3940  HIDE3950  END4000 openConnection: REM4001  REM open the NNTP connection4010  LET bit:=GETROOT().|bit:nsbasic|4020  LET bit.fconfigRAddr:=NewsHost4030  LET bit.fconfigRPort:=NewsPort4040  U.bit:MCONNECT()4050  GOSUB WaitForConnect //4060  GOSUB waitForOneLineReply //4070  RETURN4200 selectGroup: REM4201  REM access the selected newsgroup4210  U.bit:SEND("group" && NewsGroup)4220  GOSUB waitForOneLineReply //4230  LET nntpReply := U.bit:RECEIVE()4240  REM reply is 211 <num articles> <first id> <last id> <groupname>CRLF4250  REM parse repy to get words4260  LET words := STRTOKENIZE(nntpReply, " ")4261  U:words() // discard first and second words4262  U:words()4270  LET firstId := FLOOR(STRINGTONUMBER(U:words()))4280  LET lastId := FLOOR(STRINGTONUMBER(U:words()))4285  LET words = NIL4290  RETURN6000 getSubjects: REM6010  REM Fetch subjects and article ids from startId to endId,6020  REM put result in two arrays subjects[] and ids[]6030  U.bit:SEND("xhdr subject" && startId & "-" & endId)6040  GOSUB waitForNNTPReply//6050  LET nntpReply := U.bit:RECEIVE()6060  LET ids := []6070  LET subjects := []6080  LET lines := STRTOKENIZE(nntpReply, "\u000d000a\u")6090  U:lines() // discard command reply6100  DO6110    LET line := U:lines()6120    IF NOT line THEN EXIT DO6130    IF line = "." THEN EXIT DO6140    LET words := STRTOKENIZE(line, " ")6150    LET artId :=  U:words()6160    LET artIdLen = STRLEN(artId)+16170    ADDARRAYSLOT(ids, artId)6180    ADDARRAYSLOT(subjects, SUBSTR(line, artIdLen, STRLEN(line)-artIdLen))6190  LOOP6193  LET lines = NIL6197  LET words = NIL6200  RETURN6500 wrapTextSubr: REM6501  REM uses _msg and _wrapAt6510  LET totalSize = STRLEN(_msg)6520  LET endOfLine = STRPOS(_msg,"\n",0)6530  IF endOfLine = nil THEN endOfLine = totalSize6540  LET pos = _wrapAt6550  ON ERROR GOTO 66106560  DO // for each paragraph6570    DO WHILE pos < endOfLine6575      LET pos = STRPOS(_msg," ",pos)6580      STRMUNGER(_msg,pos,1,"\n",0,1)6590      LET pos = pos + _wrapAt6600    LOOP6610    IF endOfLine = totalSize THEN6615      ON ERROR GOTO 06617      RETURN6619    END IF6620    LET pos = endOfLine + _wrapAt6630    LET endOfLine = STRPOS(_msg,"\n",endOfLine+1)6640    IF endOfLine = NIL THEN endOfLine = totalSize6650  LOOP6655  ON ERROR GOTO 06660  RETURN7000 fetch: REM7001  REM Fetch and parse article artId7010  REM put result into header, fullHeader, and body7015  PROGRESS("Getting Article", "Receiving article", 20)7020  U.bit:SEND("article" && artId)7030  GOSUB waitForNNTPReply//7035  PROGRESS("Getting Article", "Received", 30)7040  LET nntpReply := U.bit:RECEIVE()7050  LET lines := STRTOKENIZE(nntpReply, "\u000a\u")7060  LET header := ""7070  LET fullHeader := ""7080  LET body := ""7090  LET inHeader = true7100  U:lines() // discard command reply7105  PROGRESS("Getting Article", "Processing header", 40)7110  DO7120    LET line := U:lines()7130    IF NOT line THEN EXIT DO7140    IF line = ".\n" THEN EXIT DO7150    IF inHeader THEN7160      IF line = "\n" THEN7170        LET inHeader = NIL  // empty line7175        PROGRESS("Getting Article", "Processing body", 50)7180      ELSE7190        LET isShortHeader = (BEGINSWITH(line, "From") or BEGINSWITH(line, "Subject")  or BEGINSWITH(line, "Date"))7200        IF isShortHeader THEN header := header & line7210        LET fullHeader := fullHeader & line7215      END IF7220    ELSE7230      LET body := body & line7240    END IF7260  LOOP7265  LET lines = NIL7267  PROGRESS("Getting Article", "Displaying", 60)7270  RETURN8000 post: REM8001  REM Post article8010  REM body is article text, it needs to be wrapped at 80 columns8020  REM username is the poster name as email address (name)8030  REM newsgroup is group to post into8040  REM subject is article subject8045  PROGRESS("Posting Article", "Post", 30)8050  U.bit:SEND("post")8060  GOSUB waitForOneLineReply //8065  PROGRESS("Posting Article", "Sending header", 40)8070  U.bit:SEND("From: " & username)8080  U.bit:SEND("Newsgroups: " & newsgroup)8090  U.bit:SEND("Subject: " & subject)8100  U.bit:SEND("X-Newsreader: NSB NNTP")8110  U.bit:SEND("");8115  PROGRESS("Posting Article", "Wrapping body", 50)8120  LET _msg = body  // make a copy to word wrap8125  LET _wrapAt = 60 // wrap at 60 colums or so8130  GOSUB wrapTextSubr //8135  PROGRESS("Posting Article", "Sending body", 60)8140  STRREPLACE( _msg, "\n", "\u000d000a\u", NIL)  // convert to UNIX line endings8150  U.bit:SEND(_msg);8160  U.bit:SEND(".")8165  PROGRESS("Posting Article", "Waiting for reply", 70)8190  GOSUB waitForOneLineReply //8195  PROGRESS("Posting Article", "Sent", 90)8200  RETURN8900 NNTPDisconnect: REM8910  U.bit:SEND("quit")8920  GOSUB waitForOneLineReply //8930  U.bit:RECEIVE() // eat reply8940  GOSUB waitForDisconnect //8950  GOSUB disconnect //8960  RETURN9000 waitForConnect: REM9010  DO WHILE bit.FENDPOINTSTATE<>19020    WAIT 10009030  LOOP9040  RETURN9100 waitForNNTPReply: REM9110  LET termStr="\u000D000A\u.\u000D000A\u"9120  DO WHILE NOT ENDSWITH(bit.FRECEIVEBUFFER,termStr)9130    WAIT 5009140  LOOP9150  RETURN9200 waitForOneLineReply: REM9210  DO WHILE STRLEN(bit.FRECEIVEBUFFER)=09220    WAIT 5009230  LOOP9240  RETURN9300 waitForDisconnect: REM9310  IF bit.FENDPOINTSTATE<>1 THEN RETURN9320  DO WHILE bit.FENDPOINTSTATE=19330    WAIT 500 // HALF-SECOND9340  LOOP9350  RETURN9400 disconnect: REM9410  IF U.bit then U.bit:CLEANUP()9420  RETURN