How much faster is Newton 2.0?       Aug 26,1995We're in the midst of putting out a new rev of NS BASIC, where performance is the key. We ran some benchmarks which illustrate where the improvements are in Newton 2.0:Test Equipment:MP110 with 2 meg card, 1.3(345025)p3, NS BASIC 2.50MP120 with 2 meg card, 2.0F1, NS BASIC 2.50All times are in ticks. A lower number is faster.Test              Iterations     MP110 1.3        MP120 2.0     MP120 2.0F1				                              NTK 1.51								NTK 1.51      NTK 1.51																																																		1.x Build					2.0 Build  -------------     ----------     ---------        ------------  ----------- CPU Bound  Loop Overhead      100            178             115             97  GOSUB/RETURN       100            556             349            265  IF/THEN            100             93              39             30  LET                100             73              32             27  GOTO               100            130              58             53	 Total CPU                        1030             593            472                                                    	74%           118% faster than MP110                                                                    25% faster yetScreen I/O		PRINT               50           1146             989            924  WINDOW              10             69              68             69  SHOW                10            272             230            226  HIDE                10            238             207            203  WPRINT             100            383             338            319  Total Screen I/O                 2108            1832           1741                                                      15%            21% faster                                                                     5% faster yetSoup I/O  OPEN                10             77              27             23  PUT                 10            200             114            119  SEQ read            10             57              42             30  RANDOM read         10             71              53             40  DEL                 10            166              80             72  Total Soup I/O                    571             316            284                                                      81%           101% faster                                                                    11% faster yetTotal Elapsed                      5988            4192           3809                                                      43%            57% faster                                                                    10% faster yetConclusions?1. Newton 2.0 is improved when it comes to CPU bound and soup bound operations. 2. There really isn't any performance gain on Screen I/O operations. The improvement can mostly be accounted for by the increased speed of the NS BASIC code.3. The new 2.0 build option in NTK 1.6 provides a significant speedup to straight NewtonScript code (25%). It doesn't make much difference to screen and soup I/O bound operations.4. We also tested to see if using the Dante platform file was any different in speed from the MessagePad platform file: there was no significant difference.Your Mileage may vary...These tests were run within an NS BASIC program (listing follows). Your own application will certainly run a different mix of CPU/Screen/Soup activity, and have a different overheard profile. Variations between each run can also be be significant.Copyright (c) 1995 NS BASIC Corporation.Listing of NS BASIC Benchmark program follows...0010 rem test performance0020 LET n=1000021 LET nw=10 // the number of windows0022 LET nf=100030 LET com$="GOSUB,FOR,IF,LET=,GOTO"0040 LET wincom$="PRINT,WINDOW,SHOW,HIDE,WPRINT"0050 LET filecom$="OPEN,PUT,SEQ,RANDOM,DEL"0060 LET startrun=ticks()0900 rem get FOR/NEXT Overhead0901 x:=gc()0905 PRINT datentime(nil)0910 LET starttime=ticks()0920 for i=1 to 1000930 next i0940 LET oh=ticks()-starttime0950 print "Loop OH",100,oh1000 rem gosub/return1001 if strpos(com$,"GOSUB",0)=NIL then goto 11001005 LET starttime=ticks()1010 for i=1 to n1020   GOSUB 1050 //sub1030 next i1042 print "GOSUB",n,ticks()-starttime-oh*(n/100),(ticks()-starttime-oh*(n/100))/n1045 GOTO 1100 //REM1050 rem sub1060 return1100 rem REM1101 if strpos(com$,"REM",0)=NIL then goto 12001105 LET starttime=ticks()1110 for i=1 to n1120   rem1130 next i1140 print "REM",n,ticks()-starttime-oh*(n/100),(ticks()-starttime-oh*(n/100))/n1200 rem IF1210 if strpos(com$,"IF",0)=NIL then goto 13001220 LET starttime=ticks()1230 for i=1 to n1240   if 1=2 then a:=1 else b:=21250 next i1260 print "IF",n,ticks()-starttime-oh*(n/100),(ticks()-starttime-oh*(n/100))/n1300 rem LET1310 if strpos(com$,"LET=",0)=NIL then goto 14001320 LET starttime=ticks()1330 for i=1 to n1350   LET a=11360 next i1370 print "LET=",n,ticks()-starttime-oh*(n/100),(ticks()-starttime-oh*(n/100))/n1500 rem GOTO1510 if strPos(com$,"GOTO",0)=NIL then goto 16001520 LET starttime=ticks()1530 for i=1 to n1540   GOTO 15501550 next i1570 print "GOTO",n,ticks()-starttime-oh*(n/100),(ticks()-starttime-oh*(n/100))/n1580 rem1590 print "--------------------------"1600 rem PRINT1601 if strpos(wincom$,"PRINT",0)=NIL then goto 20001605 LET e=env("s0")1610 environ io="screen"1611 environ s0.connect=""1620 LET starttime=ticks()1630 for i=1 to n/21640   print i1650 next i1655 wait1660 if e="s0" then environ io="s0"1662 LET x=ticks()-starttime-oh*(n/100)1665 wait1670 print "PRINT",n,x,x/n2000 rem test windows2010 if wincom$=NIL then goto 30002015 dim w[nw],ww[nw]2020 for i=0 to nw-12025   LET w[i]={}2030   LET w[i].viewBounds={Left: 0, right: 100, top: i*15+1, bottom: i*15+12}2040   LET w[i].text=i & " "2050 next i2100 rem WINDOW2110 if strpos(wincom$,"WINDOW",0)=NIL then goto 22002120 LET starttime=ticks()2130 for i=0 to nw-12140   window ww[i],w[i]2150 next i2160 print "WINDOW",nw,ticks()-starttime-oh*(nw/100),(ticks()-starttime-oh*(nw/100))/nw2200 rem SHOW2210 if strpos(wincom$,"SHOW",0)=NIL then goto 23002220 LET starttime=ticks()2230 for i=0 to nw-12240   show ww[i]2250 next i2260 print "SHOW",nw,ticks()-starttime-oh*(nw/100),(ticks()-starttime-oh*(nw/100))/nw2300 rem HIDE2310 if strpos(wincom$,"HIDE",0)=NIL then goto 24002320 LET starttime=ticks()2330 for i=0 to nw-12340   hide ww[i]2350 next i2360 print "HIDE",nw,ticks()-starttime-oh*(nw/100),(ticks()-starttime-oh*(nw/100))/nw2400 rem WPRINT2410 if strpos(wincom$,"WPRINT",0)=NIL then goto 25002415 show ww[0]2420 LET starttime=ticks()2430 for i=1 to n2440   wprint ww[0],i2450 next i2460 print "WPRINT",n,ticks()-starttime-oh*(n/100),(ticks()-starttime-oh*(nw/100))/n2500 rem2510 print "--------------------------"3000 rem test fileIO3010 if filecom$=NIL then goto 40003020 open ch,"Benchmark",key3030 if fstat=0 then delete "Benchmark"3040 create ch,"Benchmark",key3100 rem OPEN3110 if strpos(filecom$,"OPEN",0)=NIL then goto 32003115 dim ch[nf]3120 LET starttime=ticks()3130 for i=0 to nf-13140   open ch[i],"Benchmark",key3150 next i3160 print "OPEN",nf,ticks()-starttime-oh*(nf/100),(ticks()-starttime-oh*(nf/100))/nf3170 LET ch=ch[1]3200 rem PUT3210 if strpos(filecom$,"PUT",0)=NIL then goto 33003220 LET starttime=ticks()3230 for i=1 to nw3240   LET rec:={key: 1000+i & " "}3250   put ch,rec3260 next i3270 print "PUT",nf,ticks()-starttime-oh*(nf/100),(ticks()-starttime-oh*(nf/100))/nf3300 rem SEQ3310 if strpos(filecom$,"SEQ",0)=NIL then goto 34003320 get ch,rec,"0"3325 LET starttime=ticks()3330 if fstat=1 then goto 33703340 get ch,rec3350 GOTO 33303370 print "SEQ",nf,ticks()-starttime,(ticks()-starttime)/nf3400 rem RANDOM3410 if strpos(filecom$,"RANDOM",0)=NIL then goto 35003420 LET starttime=ticks()3430 for i=1 to nf3440   LET key:=1000+random(1,nf) & " "3450   get ch,rec,key3465 next i3470 print "RANDOM",nf,ticks()-starttime-oh*(nf/100),(ticks()-starttime-oh*(nf/100))/nf3500 rem DEL3510 if strPos(filecom$,"DEL",0)=NIL then goto 36003525 LET starttime=ticks()3526 get ch,rec,"0"3530 if fstat=1 then goto 35703535 del ch,rec3560 GOTO 35263570 print "DEL",nf,ticks()-starttime-oh*(nf/100),(ticks()-starttime-oh*(nf/100))/nf3600 rem3610 print "--------------------------"4000 print "Total Elapsed Time:",ticks()-startrun